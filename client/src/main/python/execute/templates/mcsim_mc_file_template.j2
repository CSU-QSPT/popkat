{% extends "mcsim_base_file_template.j2" %}
{% block sim_type %}Monte Carlo{% endblock sim_type %}
{% block post_integrate %}
MonteCarlo ("{{ meta_info.out_file }}", {{ sim_params.num_draws }}, {{ sim_params.rng_seed }});
{% endblock post_integrate%}
{% block content %}
# scalar variables
{%- for cls, params in scalar_params.items() %}
# {{ cls }}
{%- for p in params %}
{%- set notes = p.notes %}
{%- if notes %}
	{%- set notes = '| ' + notes %}
{%- endif %}
{{ p.name }} = {{ p.value }};		# {{ p.description }} [{{ p.units }}] {{ notes }}
{%- endfor %}
{% endfor %}

# distributions
{%- for dp in dist_params %}
Distrib ({{ dp.name }}, {{ dp.dist }}, {{ dp.args | join(', ') }});
{%- endfor %}

Simulation{

	{{ dosing }};

	PrintStep({{ output_vars | join(', ')}}, {{ sim_params.t_start }}, {{ sim_params.t_end }}, {{ sim_params.t_step }});
}
{% endblock content %}
